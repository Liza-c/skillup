lst = [1, 2, 3, 4]
d_lst = [1, 2, 9]
lst_1 = [5, 6, 8, 9]
s = 2
print(f"Cписок целых чисел: {lst}")


# ==================================================================
# === Функция, вычисляющая произведение элементов списка целых======
# ==================================================================
def multiplication(lst):
    res = 1
    for i in lst:
        if i != 0:
            res *= i
        else:
            res == 0
            print("Произведение элементов списка целых равняется нулю.")
            break
    return f"Произведение элементов списка целых: {res}"

# ==================================================================
# ============ Функция для нахождения минимума в списке целых ======
# ==================================================================
def minimum(lst):
    return f"Минимум в списке: {min(lst)}"

# ==================================================================
# === Функция для нахождения количества простых чисел в списке =====
# ==================================================================
def prime(lst):
    count = 0
    for i in lst:
        if all(i%j != 0 for j in range(2, i)):
            count += 1
    return f"Kоличество простых чисел в списке целых: {count}"

# ==================================================================
# == Функция, удаляющая из списка целых некоторое заданное числох ==
# ==================================================================
def dell_n(lst, d_lst):
    count_d = 0
    for i in d_lst:
        if i in lst:
            lst.remove(i)
            count_d += 1
    return f"Количество удаленных элементов: {count_d}"

# ==================================================================
# ==================== Объединение списков =========================
# ==================================================================
def all_list(lst, lst_1):
    return f"Cписок, содержащий элементы обоих списков: {lst + lst_1}"

# ==================================================================
# ==== Функция, высчитывающая степень каждого элемента списка ======
# ==================================================================
def p(lst, s):
    new_lst = []
    for i in lst:
        new_lst.append(i**s)
    return f"Новый список, где каждый элемент находится в степени {s}: {new_lst}"
            

print(multiplication(lst))
print(minimum(lst))
print(prime(lst))
print(dell_n(lst, d_lst))
print(all_list(lst, lst_1))
print(p(lst, s))

#Вывод:
#Cписок целых чисел: [1, 2, 3, 4]
#Произведение элементов списка целых: 24
#Минимум в списке: 1
#Kоличество простых чисел в списке целых: 3
#Количество удаленных элементов: 2
#Cписок, содержащий элементы обоих списков: [3, 4, 5, 6, 8, 9]
#Новый список, где каждый элемент находится в степени 2: [9, 16]